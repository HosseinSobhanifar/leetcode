num1 = "7"
num2 = "0"


def adder(num1, num2, carry=0):
    if len(num1) == 0 and len(num2) == 0:
        if carry != 0:
            return f"{carry}"
        else:
            return ""
    if len(num1) == 0:
        temp = int(num2) + carry
        return f"{temp}"
    if len(num2) == 0:
        temp = int(num1) + carry
        return f"{temp}"
    if len(num1) != 0 and len(num2) != 0:
        a = int(num1[-1])
        b = int(num2[-1])
        s = a + b + carry
        carry = s // 10
        result = s % 10
        temp = adder(num1[:-1], num2[:-1], carry)
        return temp + f"{result}"


print(adder(num1=num1, num2=num2))
# ---------------------------------------------------------------------------- Leetcode ---------------------------------------------------------------------------

num1 = "87"
num2 = "123"
num1, num2 = list(num1), list(num2)
carry, res = 0, []
while len(num2) > 0 or len(num1) > 0:
    n1 = ord(num1.pop()) - ord('0') if len(num1) > 0 else 0              # important
    n2 = ord(num2.pop()) - ord('0') if len(num2) > 0 else 0

    temp = n1 + n2 + carry
    res.append(temp % 10)
    carry = temp // 10
# if carry: res.append(carry)
print(''.join([str(i) for i in res])[::-1])
# ---------------------------------------------------------------------------- Leetcode ---------------------------------------------------------------------------

class Solution:
    def addStrings(self, num1: str, num2: str) -> str:
        ans = []
        i1, i2 = len(num1) - 1, len(num2) - 1
        carry = 0
        while i1 >= 0 or i2 >= 0 or carry > 0:
            if i1 >= 0:
                carry += ord(num1[i1]) - ord('0')
                i1 -= 1
            if i2 >= 0:
                carry += ord(num2[i2]) - ord('0')
                i2 -= 1
            ans.append(chr(carry % 10 + ord('0')))
            carry //= 10
        return "".join(ans)[::-1]

