class Solution(object):
    def plusOne(self, digits):
        """
        :type digits: List[int]
        :rtype: List[int]
        """
        carry = 0
        digits = digits[::-1]
        for i in range(len(digits)):
            digit = digits[i]
            if i == 0:
                digit = digit + 1 + carry

                if digit <= 9:
                    digits[i] = digit
                    carry = 0
                    return(digits[::-1])
                    break
                else:
                    digits[i] = digit - 10
                    carry = 1
                    continue
            if carry == 1:
                digit = digit + carry
                if digit <= 9:
                    digits[i] = digit
                    carry = 0
                    return(digits[::-1])
                    break
                else:
                    digits[i] = digit - 10
                    carry = 1

        digits.append(carry)
        return(digits[::-1])
# --------------------------------------------------------------------------------------------------------------------------------------------------------

def plusOne(digits):
    num = 0
    for i in range(len(digits)):
    	num += digits[i] * pow(10, (len(digits)-1-i))
    return [int(i) for i in str(num+1)]
    # --------------------------------------------------------------------------------------------------------------------------------------------------------
    
def plusOne(digits):
    digits[-1] += 1
    for i in range(len(digits)-1, 0, -1):
        if digits[i] != 10:
            break
        digits[i] = 0
        digits[i-1] += 1
    
    if digits[0] == 10:
        digits[0] = 0
        return [1] + digits
    return digits
                
