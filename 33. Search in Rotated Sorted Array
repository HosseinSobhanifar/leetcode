def binarySearch(arr, start, end, number):                      # regular binary search
    mid = ((end - start) // 2) + start
    # print(mid)

    if arr[mid] == number:
        return mid

    elif end == start:
        return -1

    elif arr[mid] > number:
        return binarySearch(arr, start, mid, number)

    elif arr[mid] < number:
        return binarySearch(arr, mid + 1, end, number)


arr = [2, 3]
x = 3


# print(binarySearch(arr, 0, len(arr) - 1, x))

def modified_binarySearch(arr, start, end, number):
    mid = ((end - start) // 2) + start

    if arr[mid] == number:
        return mid

    elif arr[start] > number > arr[end]:
        return -1

    elif end == start:
        return -1

    elif arr[start] <= number < arr[mid]:
        return modified_binarySearch(arr, start, mid, number)

    elif arr[mid] < number <= arr[end]:
        return modified_binarySearch(arr, mid + 1, end, number)

    elif arr[start] <= arr[mid] and arr[mid] > arr[end]:

        return modified_binarySearch(arr, mid + 1, end, number)

    elif arr[start] >= arr[mid] and arr[mid] < arr[end]:

        return modified_binarySearch(arr, start, mid, number)

    else:
        return -1


nums = [4, 5, 6, 7, 8, 1, 2, 3]
nums = [8, 1]
nums = [4, 5, 6, 7, 0, 1, 2]
nums = [1, 3, 5]
target = 0
print(modified_binarySearch(nums, 0, len(nums) - 1, target))
